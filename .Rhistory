#nb. d'observations
n <- length(x)
#moyenne globale
m <- mean(x)
#variabilité totale
TSS <- sum((x-m)^2)
#effectifs conditionnels
nk <- table(y)
#moyennes conditionnelles
mk <- tapply(x,y,mean)
#variabilité expliquée
BSS <- sum(nk * (mk - m)^2)
#moyennes + prop. variance expliquée
result <- c(mk,100.0*BSS/TSS)
#nommer les élements du vecteur
names(result) <- c(paste("G",1:K),"% epl.")
#renvoyer le vecteur résultat
return(result)
}
print(sapply(new_df,stat.comp,y=groupes.cah))
View(groupes)
##### ACP #####
the_df <- select(new_df, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
res.pca <- PCA(the_df, graph = FALSE)
print(res.pca)
# valeurs propres
eig.val <- get_eigenvalue(res.pca)
eig.val
#visualisation des valeurs propres
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 60))
var <- get_pca_var(res.pca)
# Coordonnées des variables
head(var$coord, 7)
#visualisation des valeurs propres
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 60))
fviz_pca_var(res.pca, col.var = "red")
names(the_df)["Disponibilité alimentaire (kcal/habitant)"] <- "Disp_kcal"
the_df <- colnames(c("diff_pop", "ratio_prot", "Disp_kcal", "Disp_prot", "diff_import", "PIB", "Poulets"))
res.pca <- PCA(the_df, graph = FALSE)
res.pca <- PCA(the_df, graph = FALSE)
##### ACP #####
the_df <- select(new_df, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
the_df <- colnames(c("diff_pop", "ratio_prot", "Disp_kcal", "Disp_prot", "diff_import", "PIB", "Poulets"))
res.pca <- PCA(the_df, graph = FALSE)
##### ACP #####
the_df <- select(new_df, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
colnames(the_df) <-c("diff_pop", "ratio_prot", "Disp_kcal", "Disp_prot", "diff_import", "PIB", "Poulets")
res.pca <- PCA(the_df, graph = FALSE)
print(res.pca)
# valeurs propres
eig.val <- get_eigenvalue(res.pca)
eig.val
#visualisation des valeurs propres
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 60))
var <- get_pca_var(res.pca)
# Coordonnées des variables
head(var$coord, 7)
fviz_pca_var(res.pca, col.var = "red")
# projection des individus
fviz_pca_ind (res.pca, col.ind = groupes.cah,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
View(the_df)
View(new_df)
# pays selectionné
groupe_3 <- subset(the_df, sort.groupes.cah. == 3)
groupe_1 <- subset(the_df, sort.groupes.cah. == 1)
#Centrage réduction des données
bilan_alim.cr <- scale(new_df, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(bilan_alim.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward,k=5)
#découpage en 4 groupes
groupes.cah <- cutree(cah.ward,k=5)
#liste des groupes
groupes <- data.frame(sort(groupes.cah))
print(groupes)
#fonction de calcul des stats
stat.comp <- function(x,y){
#nombre de groupes
K <- length(unique(y))
#nb. d'observations
n <- length(x)
#moyenne globale
m <- mean(x)
#variabilité totale
TSS <- sum((x-m)^2)
#effectifs conditionnels
nk <- table(y)
#moyennes conditionnelles
mk <- tapply(x,y,mean)
#variabilité expliquée
BSS <- sum(nk * (mk - m)^2)
#moyennes + prop. variance expliquée
result <- c(mk,100.0*BSS/TSS)
#nommer les élements du vecteur
names(result) <- c(paste("G",1:K),"% epl.")
#renvoyer le vecteur résultat
return(result)
}
print(sapply(new_df,stat.comp,y=groupes.cah))
##### ACP #####
the_df <- select(new_df, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
colnames(the_df) <-c("diff_pop", "ratio_prot", "Disp_kcal", "Disp_prot", "diff_import", "PIB", "Poulets")
res.pca <- PCA(the_df, graph = FALSE)
print(res.pca)
# valeurs propres
eig.val <- get_eigenvalue(res.pca)
eig.val
#visualisation des valeurs propres
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 60))
var <- get_pca_var(res.pca)
# Coordonnées des variables
head(var$coord, 7)
fviz_pca_var(res.pca, col.var = "red")
# qualité de représentation des varaibles
corrplot(var$cos2, is.corr=FALSE)
# projection des individus
fviz_pca_ind (res.pca, col.ind = groupes.cah,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
#merge des groupes avec le df
the_df$zone <- row.names(the_df)
groupes$zone <- row.names(groupes)
the_df <- left_join(the_df, groupes,by="zone")
# pays selectionné
groupe_3 <- subset(the_df, sort.groupes.cah. == 3)
groupe_1 <- subset(the_df, sort.groupes.cah. == 1)
# calcul de la moyenne pour la variables Disponibilité alimentaire (kcal/habitant) dans le dataframe générale
xbar <- mean(the_df$`Disponibilité alimentaire (kcal/habitant)`)
# calcul de la moyenne pour la variables Disponibilité alimentaire (kcal/habitant) dans le dataframe générale
xbar <- mean(the_df$`Disponibilité alimentaire (kcal/habitant)`)
# calcul de la moyenne pour la variables Disponibilité alimentaire (kcal/habitant) dans le dataframe générale
xbar <- mean(the_df$`Disp_kcal`)
round(xbar,digits=2)
# calcul de l'ecart type pour la variables Disponibilité alimentaire (kcal/habitant) dans le dataframe générale
sprime <- sd(the_df$`Disp_kcal`)
round(sprime,digits=2)
# calcul de la variance pour la variables Disponibilité alimentaire (kcal/habitant) dans le dataframe générale
sprime2 <- var(the_df$`Disp_kcal`)
round(sprime2,digits=2)
hist(the_df$`Disp_kcal`, prob=TRUE,main="Histogramme")
curve(dnorm(x,mean=xbar,sd=sprime),col="red",lwd=2,add=TRUE,yaxt="n")
tw <- shapiro.test(the_df$`Disp_kcal`)
View(tw)
groupe_2 <- subset(the_df, sort.groupes.cah. == 2)
var_test <-var.test(groupe_2$`Disp_kcal`,groupe_3$`Disponibilité alimentaire (kcal/habitant)`)
var_test <-var.test(groupe_2$`Disp_kcal`,groupe_3$`Disp_kcal`)
View(var_test)
var_test <-var.test(groupe_1$`Disp_kcal`,groupe_2$`Disp_kcal`)
mean_test <- t.test(groupe_1$`Disp_kcal`,groupe_2$`Disp_kcal)`,var.equal=TRUE)
bilan_an
View(var_test)
View(mean_test)
mean_test[["p.value"]]
View(cah.ward)
#Centrage réduction des données
group_1.cr <- scale(new_df, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_1.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#Centrage réduction des données
group_1.cr <- scale(groupe_1, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_1.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#Centrage réduction des données
group_1.cr <- scale(groupe_1, center=T, scale=T)
#Centrage réduction des données
group_1.cr <- scale(groupe_1, center=T, scale=T)
View(groupe_1)
row.names(groupe_1) <- groupe_1$Zone
#Centrage réduction des données
group_1.cr <- scale(groupe_1, center=T, scale=T)
View(groupe_1)
View(groupe_1)
row.names(groupe_3) <- groupe_1$Zone
View(groupe_3)
row.names(groupe_3) <- groupe_1$Zone
row.names(groupe_3) <- groupe_3$Zone
View(groupe_3)
row.names(groupe_3) <- groupe_3$zone
View(groupe_3)
groupe_3 <- select(groupe_3, "diff_pop", "ratio_prot", "Disp_kcal", "Disp_prot", "diff_import", "PIB", "Poulets")
#Centrage réduction des données
group_3.cr <- scale(groupe_3, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_3.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=5)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=5)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
View(groupes.2)
print(sapply(groupe_1,stat.comp,y=groupes.cah.2))
print(sapply(groupe_3,stat.comp,y=groupes.cah.2))
View(groupes.2)
######## ACP ######
res.pca.2 <- PCA(the_df, graph = FALSE)
var.2 <- get_pca_var(res.pca)
######## ACP ######
res.pca.2 <- PCA(groupe_3, graph = FALSE)
var.2 <- get_pca_var(res.pca)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
fviz_pca_var(res.pca.2, col.var = "red")
var.2 <- get_pca_var(res.pca.2)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
fviz_pca_var(res.pca.2, col.var = "red")
fviz_pca_ind (res.pca.2, col.ind = groupes.cah.2,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=3)
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=3)
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=4)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=4)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
print(groupes.2)
# Supression des pays non favorables à une implentation
row.names.remove <- c("France", "Arabie saoudite", "Fédération de Russie")
new_df <- df_general[!(row.names(df_general) %in% row.names.remove), ]
#Centrage réduction des données
group_3.cr <- scale(groupe_3, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_3.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=4)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=4)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
print(groupes.2)
# Supression des pays non favorables à une implentation
row.names.remove <- c("France", "Arabie saoudite", "Fédération de Russie")
groupe_3 <- groupe_3[!(row.names(groupe_3) %in% row.names.remove), ]
#Centrage réduction des données
group_3.cr <- scale(groupe_3, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_3.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=4)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=4)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
print(groupes.2)
print(sapply(groupe_3,stat.comp,y=groupes.cah.2))
######## ACP ######
res.pca.2 <- PCA(groupe_3, graph = FALSE)
var.2 <- get_pca_var(res.pca.2)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
fviz_pca_ind (res.pca.2, col.ind = groupes.cah.2,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_var(res.pca.2, col.var = "red")
View(groupe_3)
View(groupe_2)
View(groupe_3)
View(the_df)
#Centrage réduction des données
group_3.cr <- scale(groupe_3, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(group_3.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward.2 <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=4)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=4)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
print(groupes.2)
print(sapply(groupe_3,stat.comp,y=groupes.cah.2))
######## ACP ######
res.pca.2 <- PCA(groupe_3, graph = FALSE)
var.2 <- get_pca_var(res.pca.2)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
print(sapply(groupe_3,stat.comp,y=groupes.cah.2))
######## ACP ######
res.pca.2 <- PCA(groupe_3, graph = FALSE)
var.2 <- get_pca_var(res.pca.2)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
fviz_pca_ind (res.pca.2, col.ind = groupes.cah.2,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=6)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=6)
# affichage du dendogramme
plot(cah.ward.2, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward.2,k=6)
#découpage en 4 groupes
groupes.cah.2 <- cutree(cah.ward.2,k=6)
#liste des groupes
groupes.2 <- data.frame(sort(groupes.cah.2))
print(groupes.2)
print(sapply(groupe_3,stat.comp,y=groupes.cah.2))
######## ACP ######
res.pca.2 <- PCA(groupe_3, graph = FALSE)
var.2 <- get_pca_var(res.pca.2)
# Coordonnées des variables
head(var.2$coord, 7)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
corrplot(var.2$cos2, is.corr=FALSE)
fviz_pca_var(res.pca.2, col.var = "red")
corrplot(var.2$cos2, is.corr=FALSE)
fviz_pca_ind (res.pca.2, col.ind = groupes.cah.2,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_var(res.pca.2, col.var = "red")
View(groupe_1)
View(groupe_2)
View(groupes)
print(sapply(new_df,stat.comp,y=groupes.cah))
library('reshape2')
library("FactoMineR")
library("factoextra")
library("tidyverse")
library("ggdendro")
library("corrplot")
population_2018 <- read.csv("population_2018.csv", sep = ",")
population_2015 <- read.csv("population_2015.csv", sep = ",")
# fichier bilan alilentaire :
bilan_alim_veg <- read.csv("bilan_alim_veg.csv",sep = ",")
bilan_alim_anim <- read.csv("bilan_alim_anim.csv",sep = ",")
# fichier bilan alilentaire :
bilan_alim_veg <- read.csv("bilan_alim_veg.csv",sep = ",")
bilan_alim_anim <- read.csv("bilan_alim_anim.csv",sep = ",")
# fichier PIB
pib <- read_csv("pib_2018.csv")
pib_pivot <- dcast(pib, Zone  ~ Produit,sum, value.var = "Valeur" )
pib_pivot <-rename(pib_pivot, "PIB" = "PIB par habitant, ($ PPA internationaux constants de 2011)")
# fichier importation :
importation <- read.csv("importation.csv")
importation_pivot <- dcast(importation, Zone  ~ Année,sum, value.var = "Valeur" )
importation_pivot$diff_import <- ((importation_pivot$`2018` - importation_pivot$`2015`) / importation_pivot$`2015`) * 100
# traitement des valeurs "inf" et "NaN"
for (i in 1:length(importation_pivot$diff_import )) {
if (importation_pivot$diff_import[i] == "Inf") {
importation_pivot$diff_import[i] = importation_pivot$`2018`[i]
}
if (importation_pivot$diff_import[i] == "NaN") {
importation_pivot$diff_import[i] = 0
}
}
importation_pivot <- select(importation_pivot, "Zone", "diff_import")
# fichier elevage :
elevage <- read.csv("elevage.csv")
elevage_pivot <- dcast(elevage, Zone  ~ Produit,sum, value.var = "Valeur" )
# Traitement fichier Population
population_pivot_2018 <- dcast(population_2018, Zone + Année ~ Élément,sum, value.var = "Valeur" )
population_pivot_2015 <- dcast(population_2015, Zone + Année ~ Élément,sum, value.var = "Valeur" )
population_pivot_2015$`Population totale` <- population_pivot_2015$`Population totale`* 1000
population_pivot_2018$`Population totale` <- population_pivot_2018$`Population totale`* 1000
population <- left_join(population_pivot_2018,population_pivot_2015,by="Zone")
population <- select(population, "Zone","Population totale.x", "Population totale.y")
population$diff_pop <- ((population$`Population totale.x` - population$`Population totale.y`) /population$`Population totale.y`)* 100
population <- select(population, "Zone", "Population totale.x", "diff_pop")
bilan_alim_veg_pivot <- dcast(bilan_alim_veg, Zone + Produit ~ Élément,sum, value.var = "Valeur" )
bilan_alim_anim_pivot <- dcast(bilan_alim_anim, Zone + Produit ~ Élément,sum, value.var = "Valeur" )
bilan_veg <- aggregate(bilan_alim_veg_pivot[,3:5], by=list(Zone=bilan_alim_veg_pivot$Zone), FUN=sum)
bilan_anim <- aggregate(bilan_alim_anim_pivot[,3:5], by=list(Zone=bilan_alim_anim_pivot$Zone), FUN=sum)
# jointure des dataframes "bilan_veg" et "bilan_anim"
df_general <- left_join(bilan_veg, bilan_anim,by="Zone")
# jointure dataframe population avec dataframe génerale
df_general <- left_join(df_general, population,by="Zone")
# jointure du dataframe pib avec dataframe générale
df_general <- left_join(df_general, pib_pivot,by="Zone")
# jointure du dataframe importation  avec le dafaframe générale
df_general <- left_join(df_general, importation_pivot,by="Zone")
# jointure du dataframe elevage avec le dataframe générale
df_general <- left_join(df_general, elevage_pivot,by="Zone")
df_general$`Disponibilité alimentaire (kcal/an)` <- (df_general$`Disponibilité alimentaire (Kcal/personne/jour).x` +
df_general$`Disponibilité alimentaire (Kcal/personne/jour).y`)*
df_general$`Population totale.x` * 365
df_general$`Disponibilité alimentaire en quantité (kg/an)` <-(df_general$`Disponibilité alimentaire en quantité (kg/personne/an).x`+
df_general$`Disponibilité alimentaire en quantité (kg/personne/an).y`)*
df_general$`Population totale.x`
df_general$`Disponibilité de protéines en quantité (kg/an)` <- ((df_general$`Disponibilité de protéines en quantité (g/personne/jour).x`+
df_general$`Disponibilité de protéines en quantité (g/personne/jour).y`)
* df_general$`Population totale.x`*365)
df_general$ratio_prot <- ((df_general$`Disponibilité de protéines en quantité (g/personne/jour).y`)*365 *df_general$`Population totale.x`)/ df_general$`Disponibilité de protéines en quantité (kg/an)`
df_general$diff_pop <- (df_general$diff_pop / df_general$`Population totale.x`)*100
df_general$`Disponibilité de protéines en quantité (g/habitant)` <- ((df_general$`Disponibilité de protéines en quantité (g/personne/jour).x`+
df_general$`Disponibilité de protéines en quantité (g/personne/jour).y`)
*365)
df_general$`Disponibilité alimentaire (kcal/habitant)` <- (df_general$`Disponibilité alimentaire (Kcal/personne/jour).x` +
df_general$`Disponibilité alimentaire (Kcal/personne/jour).y`)*365
row.names(df_general) <- df_general$Zone
#Selection des variables pour le dataframe générale
df_general <- select(df_general, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
# suppréssion dees valeurs nulles
df_general <-drop_na(df_general)
# Suppréssion des pays étant de gros producteurs de poulets
row.names.remove <- c("Brésil", "Chine, continentale", "Chine - RAS de Macao",
"Chine - RAS de Hong-Kong", "Chine", "États-Unis d'Amérique", "Pologne")
new_df <- df_general[!(row.names(df_general) %in% row.names.remove), ]
new_df <- select(new_df, "diff_pop", "ratio_prot", "Disponibilité alimentaire (kcal/habitant)", "Disponibilité de protéines en quantité (g/habitant)", "diff_import", "PIB", "Poulets")
#Centrage réduction des données
bilan_alim.cr <- scale(new_df, center=T, scale=T)
#matrice des distances entre individus
d.bilan_alim <- dist(bilan_alim.cr)
#Cah - critère de Ward
#method = « ward.D2 » correspond au vrai critère de Ward
#utilisant le carré de la distance
cah.ward <- hclust(d.bilan_alim,method="ward.D2")
# affichage du dendogramme
plot(cah.ward, labels = FALSE, main = "Dendrogramme")
#dendrogramme avec matérialisation des groupes
rect.hclust(cah.ward,k=5)
#découpage en 4 groupes
groupes.cah <- cutree(cah.ward,k=5)
#liste des groupes
groupes <- data.frame(sort(groupes.cah))
print(groupes)
#fonction de calcul des stats
stat.comp <- function(x,y){
#nombre de groupes
K <- length(unique(y))
#nb. d'observations
n <- length(x)
#moyenne globale
m <- mean(x)
#variabilité totale
TSS <- sum((x-m)^2)
#effectifs conditionnels
nk <- table(y)
#moyennes conditionnelles
mk <- tapply(x,y,mean)
#variabilité expliquée
BSS <- sum(nk * (mk - m)^2)
#moyennes + prop. variance expliquée
result <- c(mk,100.0*BSS/TSS)
#nommer les élements du vecteur
names(result) <- c(paste("G",1:K),"% epl.")
#renvoyer le vecteur résultat
return(result)
}
print(sapply(new_df,stat.comp,y=groupes.cah))
mean_study <- sapply(new_df,stat.comp,y=groupes.cah)
View(mean_study)
